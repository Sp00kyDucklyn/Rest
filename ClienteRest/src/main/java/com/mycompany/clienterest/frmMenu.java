/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.clienterest;

import Entidades.Alumno;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos T.
 */
public class frmMenu extends javax.swing.JFrame {

    /**
     * Creates new form frmMenu
     */
    DefaultTableModel modeloTabla = new DefaultTableModel();
    List<Alumno> listaAlumnos = new ArrayList<>();

    public frmMenu() {
        initComponents();
        listaAlumnos = new ArrayList<>();
        listaAlumnos.add(
                new Alumno(1, "Diego D. Robles"));
        listaAlumnos.add(
                new Alumno(2, "Cubaniux"));
        listaAlumnos.add(
                new Alumno(3, "Daniel top 5"));
        listaAlumnos.add(
                new Alumno(4, "Ivan Estrellita"));
        listaAlumnos.add(
                new Alumno(5, "Carmen presi"));
        listaAlumnos.add(
                new Alumno(6, "Oscarin disneycito"));
        consultarTodos(listaAlumnos);
    }

    public void consultarTodos(List<Alumno> listaAlumnos) {
        modeloTabla.setRowCount(0);
        modeloTabla.setColumnCount(0);
        tblAlumnos.setModel(modeloTabla);
        modeloTabla.addColumn("ID");
        modeloTabla.addColumn("Nombre");
        for (Alumno alumno : listaAlumnos) {
            Object[] fila = {alumno.getId(), alumno.getNombre()};
            modeloTabla.addRow(fila);
            System.out.println("Se ha agregado el alumno: " + alumno.getNombre());
        }
        tblAlumnos.repaint();
    }

    public void consultarPorID(int idBuscado) {

        modeloTabla.setRowCount(0);
        modeloTabla.setColumnCount(0);
        tblAlumnos.setModel(modeloTabla);
        modeloTabla.addColumn("ID");
        modeloTabla.addColumn("Nombre");

        for (Alumno alumno : listaAlumnos) {
            if (alumno.getId() == idBuscado) {
                Object[] fila = {alumno.getId(), alumno.getNombre()};
                modeloTabla.addRow(fila);
                System.out.println("Se ha encontrado el alumno del id " + alumno.getId());
                break;
            }
        }
        tblAlumnos.repaint();
    }

    public void eliminarPorId(int idAlumno) {
        for (Iterator<Alumno> iterator = listaAlumnos.iterator(); iterator.hasNext();) {
            Alumno alumno = iterator.next();
            if (alumno.getId() == idAlumno) {
                iterator.remove();
                System.out.println("Se ha eliminado el alumno con ID: " + idAlumno);
                break;
            }
        }
        consultarTodos(listaAlumnos);
    }
    
    public void insertar(){
        String nombre = JOptionPane.showInputDialog("Ingrese el nombre del alumno:");
        if (nombre != null && !nombre.isEmpty()) {
            Alumno nuevoAlumno = new Alumno(listaAlumnos.size() + 1, nombre);
            listaAlumnos.add(nuevoAlumno);
            consultarTodos(listaAlumnos);
        }
    }
    
    public void actualizarPorId(int idAlumno) {
        for (Iterator<Alumno> iterator = listaAlumnos.iterator(); iterator.hasNext();) {
            Alumno alumno = iterator.next();
            if (alumno.getId() == idAlumno) {
                
                
                String nombreNuevo = JOptionPane.showInputDialog("Ingrese el nombre nuevo del alumno:");
                
                if (nombreNuevo != null && !nombreNuevo.isEmpty()) {
                  
                    alumno.setNombre(nombreNuevo);
                    System.out.println("Se ha actualizado el alumno con ID: " + idAlumno);
                    
                }else{
                    System.out.println("La actualizaci√≥n del alumno con ID: "+ idAlumno+" ha sido cancelada");
                }

               
                break;
            }
        }
        consultarTodos(listaAlumnos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlumnos = new javax.swing.JTable();
        btnConsultarID = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEliminar = new javax.swing.JTextField();
        btnEliminarID = new javax.swing.JButton();
        lblActualizar = new javax.swing.JLabel();
        btnInsertar = new javax.swing.JButton();
        lblInsertar = new javax.swing.JLabel();
        txtActualizar = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAlumnos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAlumnos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 57, -1, -1));

        btnConsultarID.setBackground(new java.awt.Color(204, 255, 204));
        btnConsultarID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnConsultarID.setText("Consultar");
        btnConsultarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarIDActionPerformed(evt);
            }
        });
        jPanel1.add(btnConsultarID, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 16, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Consultar por ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 19, -1, -1));
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 16, 76, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jackblack.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 228, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Eliminar por ID:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 19, -1, -1));
        jPanel1.add(txtEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(435, 16, 76, -1));

        btnEliminarID.setBackground(new java.awt.Color(204, 255, 204));
        btnEliminarID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminarID.setText("Eliminar");
        btnEliminarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarIDActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminarID, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 16, -1, -1));

        lblActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblActualizar.setText("Actualizar:");
        jPanel1.add(lblActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(533, 139, -1, -1));

        btnInsertar.setBackground(new java.awt.Color(204, 255, 204));
        btnInsertar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        jPanel1.add(btnInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, -1, -1));

        lblInsertar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInsertar.setText("Insertar:");
        jPanel1.add(lblInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 90, -1, -1));
        jPanel1.add(txtActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(606, 136, 76, -1));

        btnActualizar.setBackground(new java.awt.Color(204, 255, 204));
        btnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(694, 136, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarIDActionPerformed
        // TODO add your handling code here:
        String idTexto = txtID.getText();

        if (idTexto.isEmpty() || !idTexto.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un ID v√°lido (n√∫meros enteros).", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Salir del m√©todo si la validaci√≥n falla
        }

        int idBuscado = Integer.parseInt(idTexto);
        boolean encontrado = false;

        for (Alumno alumno : listaAlumnos) {
            if (alumno.getId() == idBuscado) {
                consultarPorID(idBuscado);
                encontrado = true;
                break;
            }
        }

        // Si el alumno no se encuentra, mostrar un mensaje al usuario
        if (!encontrado) {
            JOptionPane.showMessageDialog(null, "No se encontr√≥ ning√∫n alumno con el ID proporcionado.", "No encontrado", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnConsultarIDActionPerformed

    private void btnEliminarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarIDActionPerformed
        String idTexto = txtEliminar.getText();

        

        int idEliminar = Integer.parseInt(idTexto);
        boolean encontrado = false;

        for (Alumno alumno : listaAlumnos) {
            if (alumno.getId() == idEliminar) {
                encontrado = true;
                eliminarPorId(idEliminar);
                break;
            }
        }

        // Si el alumno no se encuentra, mostrar un mensaje al usuario
        if (!encontrado) {
            JOptionPane.showMessageDialog(null, "No se encontr√≥ ning√∫n alumno con el ID proporcionado.", "No encontrado", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarIDActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        // TODO add your handling code here:
        insertar();
        
    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        String idTexto = txtActualizar.getText();


        int idActualizar = Integer.parseInt(idTexto);
        boolean encontrado = false;

        for (Alumno alumno : listaAlumnos) {
            if (alumno.getId() == idActualizar) {
                encontrado = true;
                actualizarPorId(idActualizar);
                break;
            }
        }

        // Si el alumno no se encuentra, mostrar un mensaje al usuario
        if (!encontrado) {
            JOptionPane.showMessageDialog(null, "No se encontr√≥ ning√∫n alumno con el ID proporcionado.", "No encontrado", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMenu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnConsultarID;
    private javax.swing.JButton btnEliminarID;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblActualizar;
    private javax.swing.JLabel lblInsertar;
    private javax.swing.JTable tblAlumnos;
    private javax.swing.JTextField txtActualizar;
    private javax.swing.JTextField txtEliminar;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
